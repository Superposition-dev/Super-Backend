<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.superposition.follow.domain.mapper.ArtistFollowMapper">
    <insert id="save" parameterType="com.superposition.follow.dto.ArtistFollowDto">
        INSERT INTO artist_follow(email, instagram_id)
        VALUES (#{email}, #{instagramId});
    </insert>

    <select id="getFollowCount" parameterType="java.lang.String" resultType="int">
        SELECT COUNT(*)
        FROM artist_follow
        WHERE email = #{email};
    </select>

    <select id="isExistFollowBy" parameterType="com.superposition.follow.dto.ArtistFollowDto" resultType="boolean">
        SELECT EXISTS(SELECT * FROM artist_follow WHERE email = #{email} AND instagram_id = #{instagramId});
    </select>

    <select id="findByEmail" parameterType="java.lang.String"
            resultType="com.superposition.follow.domain.entity.ArtistFollow">
        SELECT *
        FROM artist_follow
        WHERE email = #{email};
    </select>

    <select id="findFollowArtistsByMyEmail" parameterType="java.lang.String"
            resultType="com.superposition.artist.dto.ArtistInfo">
        SELECT artist.profile, artist.name, artist.introduce, artist.is_display, artist.description, artist.instagram_id
        FROM artist_follow artist_follow
                 INNER JOIN artist artist ON artist.instagram_id = artist_follow.instagram_id
        WHERE artist_follow.email = #{email}
        ORDER BY artist_follow.created_at ASC;
    </select>

    <delete id="deleteBy" parameterType="com.superposition.follow.dto.ArtistFollowDto">
        DELETE
        FROM artist_follow
        WHERE email = #{email}
          AND instagram_id = #{instagramId};
    </delete>
</mapper>